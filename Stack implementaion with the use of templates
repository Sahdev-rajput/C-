#include <iostream>
using namespace std;
template<class Y>
class stack
{
	private:
		Y* str;
		int top;
		int size;
public:
	stack(int sz)
	{
		size = sz;
		str = new Y[size];
		top = -1;
	}
	void push(int element);
	void pop();
	void peek();
	bool is_empty();
};
template<class Y>
void stack<Y>::push(int element)
{
	if (top == size-1)
	{
		cout << "Stack is full";
	}
	else
	{
		top++;
		str[top] = element;
	}
}
template<class Y>
void stack<Y>::pop()
{
	if (is_empty())
	{
		cout << "Stack is empty";
	}
	else
	{
		top--;
	}
}
template<class Y>
bool stack<Y>::is_empty()
{
	if (top == -1)
	{
		return true;
	}
	else
	{
		return false;
	}
}
template<class Y>
void stack<Y>::peek()
{
	cout << str[top];
}
int main()
{
	stack<int> s(5);
	s.push(5);
	s.push(10);
	s.push(15);
	s.pop();
	s.peek();
}
