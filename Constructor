#include <iostream>
using namespace std;
class rectangle
{
private:
	int length;
	int breadth;
public:
	//here it might be function overloaded function
	rectangle()
	{
		length = 1;
		breadth = 1;
	}
	rectangle(int a, int b)
	{
		setlength(a);
		setbreadth(b);
	}
	rectangle(rectangle& r)
	{
		length = r.length;
		breadth = r.breadth;
	}
	void setlength(int l)
	{
		if (l < 0)
			length = 0;
		else 
		length = l;
	}
	void setbreadth(int b)
	{
		if (b < 0)
			breadth = 0;
		else
		breadth = b;
	}
	int getlength()
	{
		return length;
	}
	int getbreadth()
	{
		return breadth;
	}
	int area()
	{
		return length * breadth;
	}
	int perimeter()
	{
		return 2 * (length + breadth);
	}
};
int main()
{
	rectangle r(10, 5);//parameterised constructor 
	rectangle r2(r);//copy constructor
	cout << "area of rectangle r2 is: " << r2.area() << endl;
	cout << "perimeter of rectangle r2 is: " << r2.perimeter() << endl;
	rectangle r3;//unparametrised constructor
	cout << "area of rectangle r3 is: " << r3.area() << endl;
	cout << "perimeter of rectangle r3 is: " << r3.perimeter() << endl;
}
